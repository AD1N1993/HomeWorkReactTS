{"version":3,"sources":["components/Sort/ArraySort.module.scss","components/Message/Message.module.scss","common/OnOff/OnOff.module.scss","components/NavBar/Burger/Burger.module.scss","common/RadioButton/RadioButton.module.scss","common/Select/Select.module.scss","common/Button/Button.module.scss","common/InputCheckbox/InputCheckbox.module.scss","Pages/JuniorPlus/JuniorPlus.module.scss","components/EditAbleSpan/EditAbleSpan.module.scss","components/EditAbleSpanLC/EditAbleSpan.module.scss","common/Clock/Clock.module.scss","common/InputText/InputText.module.scss","Pages/Junior/Junior.module.scss","components/NavBar/FlyMenu/FlyMenu.module.scss","components/ShowRoom/ShowRoom.module.scss","Pages/Prejunior/PreJunior.module.scss","common/preloader/preloader.module.scss","assets/img/preloader.gif","components/NavBar/Burger/Burger.tsx","components/NavBar/FlyMenu/FlyMenu.tsx","components/NavBar/NavBar.tsx","common/Button/Button.tsx","common/InputCheckbox/InputCheckbox.tsx","components/Todolist/TodoList.tsx","common/InputText/InputText.tsx","components/HelloInput/HelloInput.tsx","components/ShowRoom/ShowRoom.tsx","components/Message/Message.tsx","Pages/Prejunior/PreJunior.tsx","state/reducers/themesReducer.ts","common/OnOff/OnOff.tsx","api/RequestsAPI.ts","state/reducers/hwReducer.ts","components/Request/Request.tsx","common/preloader/preloader.jsx","Pages/JuniorPlus/JuniorPlus.tsx","components/EditAbleSpan/EditAbleSpan.tsx","components/EditAbleSpanLC/EditAbleSpan.tsx","common/Select/Select.tsx","common/RadioButton/RadioButton.tsx","components/Sort/ArraySort.tsx","common/Clock/Clock.jsx","Pages/Junior/Junior.tsx","App.tsx","serviceWorker.ts","state/store.ts","index.tsx"],"names":["module","exports","Burger","props","className","s","wrapper","onClick","item","active","mode","white","black","FlyMenu","outside","status","show","onClickHide","flyMenu","flyMenuList","flyMenuLink","to","activeClassName","activeLink","flyMenuItem","NavBar","useState","setActive","onClickChangeState","theme","useSelector","state","Button","btn","error","action","value","InputCheckBox","checkbox","checked","input","type","onChange","e","id","currentTarget","changeStatus","Todolist","title","tasks","map","task","key","titleTask","isDone","removeTask","changeFilter","InputText","inputText","inputValue","onKeyPress","actionEnter","HelloInput","HelloUser","inputState","alert","changeQuantity","toString","changeInputName","quantityUsers","length","SchowRoom","setInputValue","setIsDone","Message","bg","avatar","src","alt","block","nickName","text","time","hours","minutes","PreJunior","priority","setTasks","filter","setFilter","setInput","usersHello","setUsersHello","tasksForTodolist","t","taskId","find","console","log","name","userName","newUsers","v1","initialState","OnOff","dispatch","useDispatch","onClickHandler","btnW","btnB","instance","axios","create","baseURL","hwApi","post","success","person","age","loading","sortHumanAC","payload","setErrorAC","errorMessage","Request","optionValue","setOptionValue","useEffect","errorID","setTimeout","clearInterval","then","res","data","errorText","catch","finally","Preloader","preloader","JuniorPlus","EditAbleSpan","editMode","setEdditMode","deactivateMode","autoFocus","onBlur","span","onDoubleClick","EditAbleSpanLC","stateAsString","JSON","stringify","localStorage","setItem","saveState","x","y","newValue","defaultState","getItem","parse","restoreState","Select","hoverElement","setHoverElement","onKeyUp","event","i","options","onKey","tabIndex","selectTitle","optionWrapper","option","selected","label","handlerOnChange","onMouseEnter","RadioButton","onChangeRadioButton","radioButtonTitle","values","radioItem","radioInput","radioItemTitle","Sort","table","subTitle","humans","p","dataRow","columnOne","columnTwo","btnWrapper","Clock","Date","date","setDate","startStop","setStartStop","timerID","setInterval","clockWrapper","toLocaleDateString","toLocaleTimeString","Junior","people","radioState","setRadioState","inputValue1","setInputValue1","inputValue2","setInputValue2","selectValue","setSelectValue","setValue","setPreloader","newInputValue","radioItemId","clickItem","range","min","max","step","dots","defaultValue","pushable","App","exact","path","render","Boolean","window","location","hostname","match","rootReducer","combineReducers","sort","a","b","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4ba00080.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ArraySort_wrapper__2XGC5\",\"table\":\"ArraySort_table__oTIYJ\",\"title\":\"ArraySort_title__sPnna\",\"subTitle\":\"ArraySort_subTitle__bCHf6\",\"dataRow\":\"ArraySort_dataRow__dkn-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Message_bg__1JJW5\",\"avatar\":\"Message_avatar__2Oa-t\",\"block\":\"Message_block__27Dpb\",\"nickName\":\"Message_nickName__1FhgC\",\"text\":\"Message_text__OTqzH\",\"time\":\"Message_time__1vBAC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"OnOff_black__34z57\",\"white\":\"OnOff_white__3TGP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Burger_wrapper__2_qbV\",\"item\":\"Burger_item__3NsEl\",\"active\":\"Burger_active__sbMF1\",\"black\":\"Burger_black__fnzQ_\",\"white\":\"Burger_white__1q09V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButtonTitle\":\"RadioButton_radioButtonTitle__1EUs6\",\"radioItem\":\"RadioButton_radioItem__1hrQg\",\"radioItemTitle\":\"RadioButton_radioItemTitle__2KqnM\",\"active\":\"RadioButton_active__1VxzH\",\"radioInput\":\"RadioButton_radioInput__2da1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectTitle\":\"Select_selectTitle__fKzfb\",\"optionWrapper\":\"Select_optionWrapper__2zDLi\",\"selected\":\"Select_selected__1ufc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3ioML\",\"error\":\"Button_error__1-CXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputCheckbox_input__2dAhW\",\"checkbox\":\"InputCheckbox_checkbox__BEE4i\",\"active\":\"InputCheckbox_active__1cbDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JuniorPlus_wrapper__3GSX6\",\"white\":\"JuniorPlus_white__2XfkH\",\"black\":\"JuniorPlus_black__3IU5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditAbleSpan_input__3JgIG\",\"span\":\"EditAbleSpan_span__2HzXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditAbleSpan_input__e5vkl\",\"span\":\"EditAbleSpan_span__3IIQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clockWrapper\":\"Clock_clockWrapper__keCYu\",\"date\":\"Clock_date__3pOHs\",\"time\":\"Clock_time__2QMMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"InputText_inputText__1skyF\",\"error\":\"InputText_error__29s8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Junior_wrapper__2wFQY\",\"range\":\"Junior_range__3xiHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flyMenu\":\"FlyMenu_flyMenu__2c7ma\",\"flyMenuList\":\"FlyMenu_flyMenuList__Kd8_H\",\"flyMenuLink\":\"FlyMenu_flyMenuLink__3mTTr\",\"flyMenuItem\":\"FlyMenu_flyMenuItem__2_zdy\",\"show\":\"FlyMenu_show__29x28\",\"activeLink\":\"FlyMenu_activeLink__23-CX\",\"outside\":\"FlyMenu_outside__1IhKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ShowRoom_wrapper__AwnXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PreJunior_title__2bdAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__NfnSA\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.32a50f1c.gif\";","import React, {useState} from \"react\";\nimport s from \"./Burger.module.scss\"\n\ntype PropsType = {\n    active:boolean\n    onClick: () => void\n    mode: \"black\" | \"white\"\n}\n\nexport function Burger(props:PropsType) {\n\n    return (\n        <div className={s.wrapper} onClick={props.onClick}>\n            <span className={`${s.item} ${props.active ? s.active : \"\"} ${props.mode===\"white\"? s.white : s.black}`} > </span>\n        </div>\n    );\n}","import React from \"react\";\nimport s from \"./FlyMenu.module.scss\";\nimport {NavLink} from \"react-router-dom\";\n\ntype PropsType = {\n    status: boolean\n    onClickHide: ()=> void\n}\n\nexport function FlyMenu(props: PropsType) {\n    return (\n        <div className={s.wrapper} >\n            <div className={`${s.outside} ${props.status ? s.show : \"\"}`} onClick={props.onClickHide}></div>\n            <div className={`${s.flyMenu} ${props.status ? s.show : \"\"}`}>\n                <ul className={s.flyMenuList}>\n                    <NavLink className={s.flyMenuLink} to=\"prejunior\" activeClassName={s.activeLink}>\n                        <li className={s.flyMenuItem}> PreJunior</li>\n                    </NavLink>\n\n                    <NavLink className={s.flyMenuLink} to=\"junior\" activeClassName={s.activeLink}>\n                        <li className={s.flyMenuItem}> Junior</li>\n                    </NavLink>\n                    <NavLink className={s.flyMenuLink} to=\"juniorplus\" activeClassName={s.activeLink}>\n                        <li className={s.flyMenuItem}> Junior+</li>\n                    </NavLink>\n                </ul>\n            </div>\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport {Burger} from \"./Burger/Burger\";\nimport {FlyMenu} from \"./FlyMenu/FlyMenu\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../state/store\";\nimport {ThemeReducerType} from \"../../state/reducers/themesReducer\";\n\n\nexport function NavBar() {\n\n    let [active, setActive] = useState(false);\n\n    function onClickChangeState() {\n        setActive(!active);\n    }\n    const theme = useSelector<AppRootStateType, ThemeReducerType>(state => state.theme)\n    return (\n        <>\n            <Burger active={active} onClick={onClickChangeState} mode={theme.theme}/>\n            <FlyMenu status={active} onClickHide={onClickChangeState}/>\n        </>\n    );\n}","import React, {useState} from \"react\";\nimport s from \"./Button.module.scss\"\n\ntype ButtonTypeProps = {\n    value:string\n    action: ()=> void\n    mode?: \"red\"\n}\n\nexport const Button = (props:ButtonTypeProps) =>{\n\n    return(\n        <button\n            className={props.mode === \"red\" ? `${s.btn}  ${s.error}`:  s.btn}\n            onClick={props.action}>\n            {props.value}\n        </button>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport s from \"./InputCheckbox.module.scss\"\n\ntype inputCheckboxTypeProps = {\n    checked: boolean\n    changeStatus: (status: boolean, id: number) => void\n    value: string;\n    id?: number\n}\n\nexport const InputCheckBox = (props: inputCheckboxTypeProps) => {\n\n    const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\n        let id = props.id || +e.currentTarget.id;\n        props.changeStatus(e.currentTarget.checked, id);\n    }\n    return (\n        <>\n            <label className={`${s.checkbox} ${props.checked ? s.active : \"\"}`}>\n                <input className={s.input} type=\"checkbox\" value={\"1\"} checked={props.checked} onChange={changeStatus}/>\n                <span>{props.value}</span>\n            </label>\n        </>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport {Button} from \"../../common/Button/Button\";\nimport {InputCheckBox} from \"../../common/InputCheckbox/InputCheckbox\";\nimport {TasksType} from \"../../Pages/Prejunior/PreJunior\";\n\n\ntype TodolistPropsType = {\n    title: string\n    tasks: Array<TasksType>\n    removeTask: (taskId: number) => void\n    changeFilter: (value: \"All\" | \"High\" | \"Middle\" | \"Low\") => void\n    changeStatus: (status: boolean, id: number) => void\n\n}\n\nexport function Todolist(props: TodolistPropsType) {\n\n    const changeFilterValueAll = () => { props.changeFilter(\"All\")};\n    const changeFilterValueHigh = () => { props.changeFilter(\"High\")};\n    const changeFilterValueMiddle = () => { props.changeFilter(\"Middle\")};\n    const changeFilterValueLow = () => { props.changeFilter(\"Low\")};\n    return (\n        <div className={\"wrapper\"}>\n            <h3>{props.title}</h3>\n            <ul>\n                {props.tasks.map(task => {\n                    return (\n                        <li key={task.id}>\n                            <InputCheckBox value={task.titleTask}\n                                           checked={task.isDone}\n                                           changeStatus={props.changeStatus}\n                                           id={task.id}/>\n                            <Button value={\"x\"} action={() => {\n                                props.removeTask(task.id)\n                            }}/>\n                        </li>\n                    );\n                })}\n\n            </ul>\n            <div>\n                <Button value={\"All\"} action={ changeFilterValueAll}/>\n                <Button value={\"High\"} action={ changeFilterValueHigh}/>\n                <Button value={\"Middle\"} action={ changeFilterValueMiddle}/>\n                <Button value={\"Low\"} action={ changeFilterValueLow}/>\n            </div>\n\n        </div>\n    );\n\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport s from \"./InputText.module.scss\"\n\ntype InputTextTypeProps = {\n    value: string\n    onChange: (inputValue: string) => void\n    actionEnter: () => void;\n    error?: boolean\n}\n\n\nexport const InputText = (props: InputTextTypeProps) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        let inputValue = e.currentTarget.value;\n        props.onChange(inputValue);\n    }\n\n    const actionEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            props.actionEnter();\n        }\n\n    }\n    return (\n        <>\n            <input className={`${s.inputText} ${props.error && props.value !==\"\" ? s.error : \"\"}`}\n                   type=\"text\"\n                   value={props.value}\n                   onChange={onChange}\n                   onKeyPress={actionEnter}\n\n            />\n            <span>{}</span>\n        </>\n    );\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {Button} from \"../../common/Button/Button\";\nimport {InputText} from \"../../common/InputText/InputText\";\nimport {HelloUsersType} from \"../../Pages/Prejunior/PreJunior\";\n\n\n\ntype InputNameProps = {\n    inputState: string\n    changeInputName: (name:string) => void;\n    quantityUsers: Array<HelloUsersType>\n    changeQuantity: (user:string)=> void\n}\n\nfunction HelloInput(props:InputNameProps) {\n\n\n    const onChange = (inputValue: string) => {\n        props.changeInputName(inputValue)\n    };\n\n\n function HelloUser() {\n      if(props.inputState !==\"\"){\n         alert(`Hello dear ${props.inputState}`);\n         props.changeQuantity(props.inputState.toString())\n\n     }\n\n    props.changeInputName(\"\")\n }\n\n function sendKeyPressEnter(e:KeyboardEvent<HTMLInputElement>) {\n    if(e.key === \"Enter\"){\n        HelloUser();\n    }\n }\n\n    return (\n        <>\n\n            <InputText value={props.inputState} onChange={onChange} actionEnter={ HelloUser}/>\n            <Button value={\"Hello\"} action={HelloUser}/>\n\n            <div>Quantity Users: <b>{props.quantityUsers.length}</b></div>\n\n        </>\n    );\n}\n\nexport default HelloInput;","import React, {ChangeEvent, useState} from \"react\";\nimport {InputText} from \"../../common/InputText/InputText\";\nimport {InputCheckBox} from \"../../common/InputCheckbox/InputCheckbox\";\nimport {Button} from \"../../common/Button/Button\";\nimport s from \"./ShowRoom.module.scss\"\n\n\nexport const SchowRoom = () => {\n    let [inputValue, setInputValue] = useState<string>(\"\");\n    let [isDone, setIsDone] = useState<boolean>(true)\n\n    const onChange = (inputValue: string) => {\n        setInputValue(inputValue)\n    };\n\n    const changeStatus = (status: boolean) => {\n        setIsDone(status)\n    }\n\n    const buttonAction = () => {\n        alert(\"Button work\");\n    }\n\n    const actionEnter = () => {\n        alert(\"Enter action\");\n        setInputValue(\"\");\n    }\n    return (\n        <div className={s.wrapper}>\n            <h3>1</h3>\n            <InputText value={inputValue} onChange={onChange} actionEnter={actionEnter} error={true}/>\n            <h3>2</h3>\n            <InputCheckBox checked={isDone} changeStatus={changeStatus} value={\"Name\"}/>\n            <h3>3</h3>\n            <Button value={\"Button\"} action={buttonAction} mode={\"red\"}/>\n        </div>\n    );\n}","import React from 'react';\nimport s from \"./Message.module.scss\"\n\ntype MessageType = {\n    nickName: string,\n    text: string,\n    avatar: string,\n    hours: number,\n    minutes: number\n}\n\nconst Message:React.FC<MessageType>= (props) => {\n    return(\n        <div className={s.bg}>\n            <img className={s.avatar} src={props.avatar} alt=\"avatar\"/>\n            <div className={s.block}>\n                <div className={s.wrapper}>\n                    <span className={s.nickName}>{props.nickName}</span>\n                    <span className={s.text}>{props.text}</span>\n                </div>\n                <div className={s.time}>{`${props.hours}:0${props.minutes}`}</div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Message","import React, {useState} from \"react\";\n\nimport {v1} from \"uuid\";\nimport {Todolist} from \"../../components/Todolist/TodoList\";\nimport HelloInput from \"../../components/HelloInput/HelloInput\";\nimport {SchowRoom} from \"../../components/ShowRoom/ShowRoom\";\nimport Message from \"../../components/Message/Message\";\nimport s from \"./PreJunior.module.scss\";\n\nexport type TasksType = {\n    id: number\n    titleTask: string\n    priority: string\n    isDone: boolean\n}\ntype FilterType = \"All\" | \"High\" | \"Middle\" | \"Low\";\n\nexport type HelloUsersType = {\n    id: string\n    name: string\n}\n\n\nexport function PreJunior() {\n\n\n    let [tasks, setTasks] = useState<Array<TasksType>>(\n        [\n            {id: 1, titleTask: \"Work\", priority: \"High\", isDone: true},\n            {id: 2, titleTask: \"Study\", priority: \"High\", isDone: true},\n            {id: 3, titleTask: \"Rest\", priority: \"Middle\", isDone: true},\n            {id: 4, titleTask: \"Movies\", priority: \"Low\", isDone: false},\n        ]\n    );\n    let [filter, setFilter] = useState<FilterType>(\"All\")\n\n    let [inputState, setInput] = useState(\"\");\n\n    let [usersHello, setUsersHello] = useState<Array<HelloUsersType>>([]);\n\n\n    function removeTask(taskId: number) {\n        tasks = tasks.filter((t: TasksType) => t.id !== taskId)\n        setTasks(tasks);\n    }\n\n    function changeFilter(value: \"All\" | \"High\" | \"Middle\" | \"Low\") {\n        setFilter(value)\n    }\n\n    function enterName(name: string) {\n        setInput(name);\n    }\n\n    function changeQuantityUsers(userName: string) {\n        let newUser: HelloUsersType = {id: v1(), name: userName};\n        let newUsers = [newUser, ...usersHello]\n        setUsersHello(newUsers)\n\n    }\n\n    const changeStatus = (status: boolean, id: number) => {\n        let task = tasks.find(t => t.id === id);\n        console.log(status, id)\n        if (task) {\n            task.isDone = status;\n            setTasks([...tasks]);\n        }\n    }\n\n\n    let tasksForTodolist = tasks;\n    if (filter === \"High\") {\n        tasksForTodolist = tasks.filter((t) => t.priority === \"High\");\n    }\n    if (filter === \"Middle\") {\n        tasksForTodolist = tasks.filter((t) => t.priority === \"Middle\");\n    }\n    if (filter === \"Low\") {\n        tasksForTodolist = tasks.filter((t) => t.priority === \"Low\");\n    }\n\n\n    return (\n\n        <>\n            <h2 className={s.title}>Home Task 1</h2>\n            <Message nickName={\"Artem\"}\n                     text={\"npm start нажимал?\"}\n                     avatar={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS4XSv8zvv1XvIvvz8PFg8hRwUTQJjbis-CJg&usqp=CAU\"}\n                     hours={20}\n                     minutes={0}\n            />\n            <h2>Home Task 2</h2>\n            <Todolist title={\"To-do list\"}\n                      tasks={tasksForTodolist}\n                      removeTask={removeTask}\n                      changeFilter={changeFilter}\n                      changeStatus={changeStatus}\n\n\n            />\n            <h2>Home Task 3</h2>\n            <HelloInput inputState={inputState}\n                        changeInputName={enterName}\n                        quantityUsers={usersHello}\n                        changeQuantity={changeQuantityUsers}\n\n            />\n            <h2>Home Task 4</h2>\n            <SchowRoom/>\n\n\n\n        </>\n    );\n\n}","const SET_THEME = \"SET_THEME\";\n\nexport type ThemeReducerType = {\n    theme: \"white\" | \"black\"\n}\n\ntype ActionsType = ReturnType<typeof setThemeAC>\n\nconst initialState: ThemeReducerType =\n    {\n        theme: \"white\"\n    }\n\nexport const themeReducer = (state: ThemeReducerType = initialState, action: ActionsType): ThemeReducerType => {\n    switch (action.type) {\n        case SET_THEME:\n            return {\n                ...state, theme: action.theme\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setThemeAC = (theme: \"white\" | \"black\") => {\n    return {type: SET_THEME, theme} as const;\n}\n","import React, {MouseEvent} from \"react\";\nimport s from \"./OnOff.module.scss\";\nimport {useDispatch} from \"react-redux\";\nimport {setThemeAC} from \"../../state/reducers/themesReducer\";\n\ntype OnOffPropsType = {\n    mode: \"black\"|\"white\"\n}\n\nexport const OnOff = (props:OnOffPropsType) => {\n    const dispatch = useDispatch();\n    const onClickHandler = (e:MouseEvent<HTMLDivElement>) =>{\n        dispatch(setThemeAC(e.currentTarget.id as \"white\" | \"black\"))\n    }\n    return (\n        <>\n            <div id={\"white\"} className={`${s.btnW} ${props.mode ===\"white\"? s.white: s.black}`} onClick={e=>onClickHandler(e)}>White mode</div>\n            <div id={\"black\"} className={`${s.btnB} ${props.mode ===\"white\"? s.black: s.white}`} onClick={e=>onClickHandler(e)}>Black mode</div>\n        </>\n    )\n}","import axios from \"axios\"\n\nconst instance = axios.create({\n    baseURL:\"https://neko-cafe-back.herokuapp.com/\"\n})\n\nexport const hwApi = {\n   sendValue (value:boolean) {\n       return instance.post(\"auth/test\",{success: value})\n   }\n}","import {hwApi} from \"../../api/RequestsAPI\";\nimport {Dispatch, useEffect} from \"react\";\n\nconst SET_PRELOADER = \"SET_PRELOADER\";\nconst SORT_ARRAY_HUMAN = \"SORT_ARRAY_HUMAN\";\nconst CHECK_ARRAY_HUMAN = \"CHECK_ARRAY_HUMAN\";\nconst SET_ERRORS = \"SET_ERRORS\";\n\n\nexport type PersonType = { id: string, name: string, age: number }\nexport type hwReducerType = {\n    person: Array<PersonType>\n    loading: boolean\n    error: string | null\n}\n\ntype SortHumanAcType = {\n    type: \"SORT_ARRAY_HUMAN\";\n    payload: \"up\" | \"down\"\n}\ntype CheckHumanAcType = {\n    type: \"CHECK_ARRAY_HUMAN\";\n    payload: 18\n}\ntype SetPreloaderAcType = {\n    type: \"SET_PRELOADER\";\n}\n\ntype ActionsType = SortHumanAcType | CheckHumanAcType | SetPreloaderAcType | ReturnType<typeof setErrorAC>\n\nlet initialState: hwReducerType = {\n    person: [\n        {id: '1', name: \"Alex\", age: 32},\n        {id: '2', name: \"Viktor\", age: 16},\n        {id: '3', name: \"Den\", age: 25},\n        {id: '4', name: \"Bork\", age: 17},\n        {id: '5', name: \"Igor\", age: 52},\n        {id: '6', name: \"Helen\", age: 12},\n        {id: '7', name: \"Julia\", age: 100}\n    ],\n    loading: false,\n    error: null\n}\n\nexport const hwReducer = (state: hwReducerType = initialState, action: ActionsType): hwReducerType => {\n    switch (action.type) {\n        case SORT_ARRAY_HUMAN:\n            if (action.payload === \"up\") {\n                return {\n                    ...state, person: [...state.person.sort(function (a, b) {\n                        if (a.name > b.name) {\n                            return 1;\n                        }\n                        if (a.name < b.name) {\n                            return -1;\n                        }\n                        return 0;\n                    })]\n                };\n            } else if (action.payload === \"down\") {\n                return {\n                    ...state, person: [...state.person.sort(function (a, b) {\n                        if (a.name < b.name) {\n                            return 1;\n                        }\n                        if (a.name > b.name) {\n                            return -1;\n                        }\n                        return 0;\n                    })]\n                }\n            } else return state\n\n        case CHECK_ARRAY_HUMAN:\n            return {\n                ...state,\n                person: state.person.filter(p => p.age > 18)\n            }\n        case SET_PRELOADER:\n            return {\n                ...state, loading: !state.loading\n            }\n        case SET_ERRORS:\n            return {\n                ...state, error: action.errorMessage\n            }\n        default:\n            return state;\n    }\n\n\n}\n\nexport const sortHumanAC = (payload: \"up\" | \"down\"): SortHumanAcType => {\n    return {type: SORT_ARRAY_HUMAN, payload: payload};\n}\nexport const checkHumanAC = (payload: 18): CheckHumanAcType => {\n    return {type: CHECK_ARRAY_HUMAN, payload: payload};\n}\nexport const setPreloaderAC = (): SetPreloaderAcType => {\n    return {type: SET_PRELOADER};\n}\nexport const setErrorAC = (errorMessage: string) => ({type: SET_ERRORS, errorMessage} as const)\n\n\nexport const setSuccessTC = (success: boolean) => {\n\n    return (dispatch: Dispatch<ActionsType>) => {\n        dispatch(setPreloaderAC())\n        hwApi.sendValue(success)\n            .then((res) => {\n                dispatch(setErrorAC(res.data.errorText))\n\n            })\n            .catch(res => {\n                dispatch(setErrorAC(\"ошибка 500 - обычно означает что что-то сломалось на сервере, например база данных)\"))\n            })\n            .finally(() => {\n                dispatch(setPreloaderAC())\n            })\n    }\n\n}","import React, {useEffect, useState} from \"react\";\nimport {Button} from \"../../common/Button/Button\";\nimport {InputCheckBox} from \"../../common/InputCheckbox/InputCheckbox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setErrorAC, setSuccessTC} from \"../../state/reducers/hwReducer\";\nimport {AppRootStateType} from \"../../state/store\";\n\n\nexport const Request = () => {\n    const [optionValue, setOptionValue] = useState(false)\n    const error = useSelector<AppRootStateType, string | null>(state => state.state.error)\n    const dispatch = useDispatch()\n    const sendValue = () => {\n        dispatch(setSuccessTC(optionValue))\n    }\n    useEffect(() => {\n        let errorID = setTimeout(() => {\n            dispatch(setErrorAC(\"\"))\n        }, 3000);\n        return function cleanup() {\n            clearInterval(errorID);\n        };\n    }, [error])\n    return (\n        <>\n            <InputCheckBox checked={optionValue} changeStatus={setOptionValue} value={\"option\"}/>\n            <Button value={\"request\"} action={sendValue}/>\n            <span>{error}</span>\n        </>\n    )\n}","import s from \"./preloader.module.scss\";\nimport React from \"react\";\nimport preloader from \"../../assets/img/preloader.gif\"\n\nexport const Preloader = () =>{\n  return <img className={s.preloader} src={preloader} alt=\"loading\"/>\n}","import React from \"react\";\nimport s from \"./JuniorPlus.module.scss\"\nimport {OnOff} from \"../../common/OnOff/OnOff\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../state/store\";\nimport {ThemeReducerType} from \"../../state/reducers/themesReducer\";\nimport {Request} from \"../../components/Request/Request\";\nimport {Preloader} from \"../../common/preloader/preloader\";\n\nexport function JuniorPlus() {\n    const theme = useSelector<AppRootStateType, ThemeReducerType>(state => state.theme)\n    const loading = useSelector<AppRootStateType>(state => state.state.loading)\n\n    return (\n\n        <div className={`${s.wrapper} ${theme.theme === \"white\" ? s.white : s.black}`}>\n            {loading && <Preloader/>}\n            <h2>Home Work 12</h2>\n            <OnOff mode={theme.theme}/>\n            <h2>Home Work 13</h2>\n            <Request/>\n        </div>\n    );\n}","import React, {ChangeEvent,KeyboardEvent, useState} from \"react\";\nimport s from \"./EditAbleSpan.module.scss\"\n\ntype EditAbleSpanPropsType = {\n    value: string\n    onChange: (newInputValue: string) => void\n\n}\n\n\nexport function EditAbleSpan(props: EditAbleSpanPropsType) {\n    let [editMode, setEdditMode] = useState(false)\n\n    const activateMode = () => {\n        setEdditMode(true)\n    }\n    const deactivateMode = () => {\n        setEdditMode(false)\n    }\n\n    const onChangeInputValue = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onChange(e.currentTarget.value)\n    }\n    function changeTitleOnKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            deactivateMode();\n        }\n    }\n\n    return (\n        <div className={s.wrapper}>\n            {\n                editMode\n                    ?\n                    <input  className={s.input}\n                            value={props.value}\n                            autoFocus={true}\n                            onBlur ={deactivateMode}\n                            onChange={onChangeInputValue}\n                            onKeyPress={changeTitleOnKeyPressed}\n                    />\n                    : <span className={s.span} onDoubleClick={activateMode}>{props.value}</span>\n            }\n        </div>\n    );\n}","import React, {ChangeEvent,KeyboardEvent, useState} from \"react\";\nimport s from \"./EditAbleSpan.module.scss\"\nimport {Button} from \"../../common/Button/Button\";\n\ntype EditAbleSpanPropsType = {\n    value: string\n    onChange: (newInputValue: string) => void\n}\n\nexport function EditAbleSpanLC(props: EditAbleSpanPropsType) {\n    let [editMode, setEdditMode] = useState(false)\n\n    const activateMode = () => {\n        setEdditMode(true)\n    }\n    const deactivateMode = () => {\n        setEdditMode(false)\n    }\n\n    const onChangeInputValue = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onChange(e.currentTarget.value)\n    }\n    function changeTitleOnKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            deactivateMode();\n        }\n    }\n\n    function saveState<T>(key: string, state: T) {\n        const stateAsString = JSON.stringify(state);\n        localStorage.setItem(key, stateAsString)\n    }\n\n    function restoreState<T>(key: string, defaultState: T) {\n        const stateAsString = localStorage.getItem(key);\n        if (stateAsString !== null) defaultState = JSON.parse(stateAsString);\n        return defaultState;\n    }\n    type StateType = {\n        x: string\n        y: number\n    }\n    const valueFromLC = () =>{\n        let newValue = restoreState<StateType>(\"first\", {x:\"\",y:0});\n        console.log(newValue.x)\n        props.onChange(newValue.x)\n    }\n\n    return (\n        <div className={s.wrapper}>\n            {\n                editMode\n                    ?\n                    <input  className={s.input}\n                            value={props.value}\n                            autoFocus={true}\n                            onBlur ={deactivateMode}\n                            onChange={onChangeInputValue}\n                            onKeyPress={changeTitleOnKeyPressed}\n                    />\n                    : <span className={s.span} onDoubleClick={activateMode}>{props.value}</span>\n            }\n            <Button value={\"save\"} action={()=>{saveState(\"first\",{x:props.value,y:0})}}/>\n            <Button value={\"restore\"} action={valueFromLC}/>\n        </div>\n    );\n}","import React, {MouseEvent, KeyboardEvent, useState} from \"react\";\nimport s from \"./Select.module.scss\"\nimport {v1} from \"uuid\";\n\ntype SelectTypeProps = {\n    options: Array<string>\n    value: string\n    onChange: (option: string) => void\n}\nvar items = [\n    {id:v1(), name:\"Alex\", age: 32},\n    {id:v1(), name:\"Viktor\", age: 16},\n    {id:v1(), name:\"Den\", age: 25},\n    {id:v1(), name:\"Bork\", age: 17},\n    {id:v1(), name:\"Igor\", age: 52},\n    {id:v1(), name:\"Helen\", age: 12},\n    {id:v1(), name:\"Julia\", age: 100},\n];\n\n\n\nexport const Select = (props: SelectTypeProps) => {\n    let [active, setActive] = useState(false);\n\n    const onShowOption = () => {\n        setActive(!active)\n    }\n    const handlerOnChange = (event: MouseEvent<HTMLOptionElement>) => {\n        props.onChange(event.currentTarget.value)\n        setHoverElement(event.currentTarget.value);\n    }\n    let [hoverElement, setHoverElement] = useState(props.value);\n\n    const onKey = (event: KeyboardEvent<HTMLDivElement>) => {\n        for (let i = 0; i < props.options.length; i++) {\n            if (props.options[i] === hoverElement) {\n                if (event.key === \"ArrowDown\") {\n                    if (!props.options[i + 1]) break\n                    props.onChange(props.options[i + 1]);\n                    setHoverElement(props.options[i + 1])\n                } else if (event.key === \"ArrowUp\") {\n                    if (!props.options[i - 1]) break\n                    props.onChange(props.options[i - 1]);\n                    setHoverElement(props.options[i - 1])\n                }\n            }\n        }\n        if (event.key === \"Escape\") setActive(false);\n        if (event.key === \"Enter\") setActive(!active);\n    }\n\n    return (\n        <>\n\n            <div onKeyUp={(event) => onKey(event)} tabIndex={0} className={s.selectTitle}\n                 onClick={onShowOption}>{props.value}\n                {active ? <div className={s.optionWrapper}>\n                    {props.options.map(option => {\n\n                            return (\n\n                                <option className={`${s.option} ${hoverElement === option ? s.selected : \"\"}`}\n                                        key={option}\n                                        value={option}\n                                        label={option}\n                                        onClick={(event) => handlerOnChange(event)}\n                                        onMouseEnter={(e) => {\n                                            setHoverElement(e.currentTarget.value)\n                                        }}\n                                >{option}\n                                </option>)\n                        }\n                    )}\n                </div> : \"\"}\n            </div>\n\n\n        </>\n    );\n\n}","import React, {  MouseEvent} from \"react\";\nimport {InputSettingsType} from \"../../Pages/Junior/Junior\";\nimport s from \"./RadioButton.module.scss\"\n\n\ntype RadioButtonPropsType = {\n    values: Array<InputSettingsType>\n    name: string\n    onChange: (radioItemId: string, isDone: boolean) => void\n}\n\n\nexport const RadioButton = (props: RadioButtonPropsType) => {\n    const onChangeRadioButton = (event: MouseEvent<HTMLInputElement>) => {\n        props.onChange(event.currentTarget.id, event.currentTarget.checked);\n    }\n    return (\n        <>\n            <h3 className={s.radioButtonTitle}>{props.name}</h3>\n            {props.values.map(i => {\n\n                return <>\n                    <label  className={s.radioItem}>\n                        <input  className={s.radioInput}\n                               type=\"radio\"\n                               value={i.title}\n                               onClick={onChangeRadioButton}\n                               id={i.id}\n                               checked={i.isDone}\n                        />\n                        <span className={`${s.radioItemTitle} ${i.isDone? s.active:\"\"}`}>{i.title}</span>\n                    </label>\n                </>\n            })}\n        </>\n    );\n\n\n};","import React from \"react\";\nimport {Button} from \"../../common/Button/Button\";\nimport {checkHumanAC, hwReducer,  PersonType, sortHumanAC} from \"../../state/reducers/hwReducer\";\nimport s from \"./ArraySort.module.scss\"\nimport {useDispatch} from \"react-redux\";\n\n\ntype SortPropsType = {\n    humans: Array<PersonType>;\n}\n\nexport const Sort = (props: SortPropsType) => {\n    let dispatch = useDispatch();\n    const peopleUp = () => {\n       dispatch(sortHumanAC(\"up\"));\n    }\n    const peopleDown = () => {\n       dispatch(sortHumanAC(\"down\"));\n    }\n    const checkOld = () => {\n       dispatch(checkHumanAC(18));\n    }\n    return (\n        <div className={s.wrapper}>\n            <table className={s.table}>\n                <caption className={s.title}>people</caption>\n                <tbody>\n                <tr>\n                    <th className={s.subTitle}>Name</th>\n                    <th className={s.subTitle}>Old</th>\n                </tr>\n                {props.humans.map(p => {\n                    return (\n                        <tr key={p.id} className={s.dataRow}>\n                            <td className={s.columnOne}>{p.name}</td>\n                            <td className={s.columnTwo}> {p.age}</td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n            <div className={s.btnWrapper}>\n                <Button value={\"Up\"} action={peopleUp}/>\n                <Button value={\"Down\"} action={peopleDown}/>\n                <Button value={\"Only 18+\"} action={checkOld}/>\n            </div>\n        </div>\n    );\n\n}","import React, {useEffect, useState} from \"react\";\nimport {Button} from \"../Button/Button\";\nimport s from \"./Clock.module.scss\"\n\nexport const Clock = () => {\n  const [date, setDate] = useState(new Date());\n  const [startStop,setStartStop] = useState(false);\n  useEffect(() => {\n    if(startStop === true){\n\t  let timerID = setInterval( () => setDate(new Date()), 1000 );\n\n\t  return function cleanup() {\n\t\tclearInterval(timerID);\n\t  };\n\t}\n\n  });\n\n  return (\n\t<>\n\t  <div className={s.clockWrapper}>\n\t\t<div className={s.date}><h1>{date.toLocaleDateString()}</h1></div>\n\t\t<span className={s.time}>{date.toLocaleTimeString()}</span>\n\t\t<Button value={\"start\"} action={()=>{setStartStop(true)}} />\n\t\t<Button value={\"stop\"} action={()=>{setStartStop(false)}}/>\n\t  </div>\n\t</>\n  );\n}\n\n","import React, {ReactNode, useEffect, useState} from \"react\";\nimport s from \"./Junior.module.scss\"\nimport {EditAbleSpan} from \"../../components/EditAbleSpan/EditAbleSpan\";\nimport {EditAbleSpanLC} from \"../../components/EditAbleSpanLC/EditAbleSpan\";\nimport {Select} from \"../../common/Select/Select\";\nimport {RadioButton} from \"../../common/RadioButton/RadioButton\";\nimport {PersonType, setPreloaderAC} from \"../../state/reducers/hwReducer\";\nimport {Sort} from \"../../components/Sort/ArraySort\";\nimport {Clock} from \"../../common/Clock/Clock\";\nimport {Preloader} from \"../../common/preloader/preloader\";\nimport {Button} from \"../../common/Button/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../state/store\";\nimport  {Range} from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nexport type InputSettingsType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\nexport function Junior() {\n    let radioSettings: Array<InputSettingsType> = [\n        {id: \"1\", title: \"Beer\", isDone: false},\n        {id: \"2\", title: \"Milk\", isDone: false},\n        {id: \"3\", title: \"Jin\", isDone: true},\n        {id: \"4\", title: \"Tequila\", isDone: false},\n    ];\n\n    const people = useSelector<AppRootStateType, Array<PersonType>>(state => state.state.person);\n    const preloader = useSelector<AppRootStateType, boolean>(state => state.state.loading);\n    let dispatch = useDispatch();\n\n\n    let [radioState, setRadioState] = useState(radioSettings);\n\n    let [inputValue1, setInputValue1] = useState<string>(\"Your name\");\n\n    let [inputValue2, setInputValue2] = useState<string>(\"Your name\");\n\n    let optionsValue = [\"Minsk\", \"Moscow\", \"London\", \"Bon\"];\n\n    let [selectValue, setSelectValue] = useState(\"Choice...\");\n\n    let [value, setValue] = useState<Array<number>>([0,10000])\n\n    const onChangeInputValue1 = (newInputValue: string) => {\n        setInputValue1(newInputValue)\n    }\n\n    const onChangeInputValue2 = (newInputValue: string) => {\n        setInputValue2(newInputValue)\n    }\n\n\n    const onChangeSelectOption = (option: string) => {\n        setSelectValue(option);\n    }\n\n    const onChangeRadioInputStatus = (radioItemId: string, isDone: boolean) => {\n        console.log(radioItemId, isDone)\n        let clickItem = radioState.find(i => i.id === radioItemId);\n        if (clickItem) {\n            clickItem.isDone = !clickItem.isDone\n            setRadioState([...radioState]);\n        }\n    }\n\n    const setPreloader = () => {\n        dispatch(setPreloaderAC())\n    }\n    useEffect(() => {\n        if (preloader) setTimeout(() => {\n            setPreloader()\n        }, 3000);\n    }, [preloader]);\n\n    if (preloader) return <Preloader/>\n\n    let onRangeValue = (value: number[]) => {\n        setValue(value)\n    }\n    return (\n        <div className={s.wrapper}>\n            <h2>Home Task 6</h2>\n            <EditAbleSpan value={inputValue1} onChange={onChangeInputValue1}/>\n            <h4>Home Task 6 with *</h4>\n            <EditAbleSpanLC value={inputValue2} onChange={onChangeInputValue2}/>\n            <h2>Home Task7</h2>\n            <Select value={selectValue} options={optionsValue} onChange={onChangeSelectOption}/>\n            <RadioButton values={radioState} name={\"Drinks\"} onChange={onChangeRadioInputStatus}/>\n            <h2>Home Task8</h2>\n            <Sort humans={people}/>\n            <h2>Home Task9</h2>\n            <Clock/>\n            <h2>Home Task10</h2>\n            <Button value={\"Show Preloader\"} action={setPreloader}/>\n            <h2>Home Task11</h2>\n            <div className={s.range}>\n                Price\n                <span> from: {value[0]}</span>\n                <span> to: {value[1]}</span>\n                <Range min={0} max={10000} step={1} dots={false} defaultValue={value} onChange={onRangeValue}\n                       pushable={true}/>\n            </div>\n        </div>\n    );\n}","import './App.scss';\nimport React, {useEffect, useState} from \"react\";\n\nimport {HashRouter, Redirect, Route,} from \"react-router-dom\"\n\nimport {NavBar} from \"./components/NavBar/NavBar\";\nimport {PreJunior} from \"./Pages/Prejunior/PreJunior\";\nimport {JuniorPlus} from \"./Pages/JuniorPlus/JuniorPlus\";\nimport {Junior} from \"./Pages/Junior/Junior\";\n\n\nfunction App() {\n\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <NavBar/>\n                <Route exact path={'/'}  render={() => <PreJunior/>}/>\n                <Route path={'/prejunior'} render={() => <PreJunior/>}/>\n                <Route path={'/junior'} render={() => <Junior/>}/>\n                <Route path={'/juniorplus'} render={() => <JuniorPlus/>}/>\n            </div>\n        </HashRouter>\n\n    )\n        ;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport {hwReducer, PersonType} from \"./reducers/hwReducer\";\nimport {themeReducer} from \"./reducers/themesReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\n// объединяя reducer-ы с помощью combineReducers,\n// мы задаём структуру нашего единственного объекта-состояния\nconst rootReducer = combineReducers({\n    state: hwReducer,\n    theme: themeReducer,\n})\n// непосредственно создаём store\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\n// определить автоматически тип всего объекта состояния\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\n// @ts-ignore\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n      <Provider store={store}>\n     <App/>\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}