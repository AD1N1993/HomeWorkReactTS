{"version":3,"sources":["components/NavBar/FlyMenu/FlyMenu.module.scss","components/Message/Message.module.scss","common/RadioButton/RadioButton.module.scss","common/Select/Select.module.scss","components/NavBar/Burger/Burger.module.scss","common/Button/Button.module.scss","common/InputCheckbox/InputCheckbox.module.scss","components/EditAbleSpan/EditAbleSpan.module.scss","components/EditAbleSpanLC/EditAbleSpan.module.scss","common/InputText/InputText.module.scss","components/ShowRoom/ShowRoom.module.scss","Pages/Prejunior/PreJunior.module.scss","Pages/JuniorPlus/JuniorPlus.module.scss","Pages/Junior/Junior.module.scss","components/NavBar/Burger/Burger.tsx","components/NavBar/FlyMenu/FlyMenu.tsx","components/NavBar/NavBar.tsx","common/Button/Button.tsx","common/InputCheckbox/InputCheckbox.tsx","components/Todolist/TodoList.tsx","common/InputText/InputText.tsx","components/HelloInput/HelloInput.tsx","components/ShowRoom/ShowRoom.tsx","components/Message/Message.tsx","Pages/Prejunior/PreJunior.tsx","Pages/JuniorPlus/JuniorPlus.tsx","components/EditAbleSpan/EditAbleSpan.tsx","components/EditAbleSpanLC/EditAbleSpan.tsx","common/Select/Select.tsx","common/RadioButton/RadioButton.tsx","Pages/Junior/Junior.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Burger","props","className","s","wrapper","onClick","item","active","FlyMenu","outside","status","show","onClickHide","flyMenu","flyMenuList","flyMenuLink","to","activeClassName","activeLink","flyMenuItem","NavBar","useState","setActive","onClickChangeState","Button","mode","btn","error","action","value","InputCheckBox","checkbox","checked","input","type","onChange","e","id","currentTarget","changeStatus","Todolist","title","tasks","map","task","key","titleTask","isDone","removeTask","changeFilter","InputText","inputText","inputValue","onKeyPress","actionEnter","HelloInput","HelloUser","inputState","alert","changeQuantity","toString","changeInputName","quantityUsers","length","SchowRoom","setInputValue","setIsDone","Message","bg","avatar","src","alt","block","nickName","text","time","hours","minutes","PreJunior","priority","setTasks","filter","setFilter","setInput","usersHello","setUsersHello","tasksForTodolist","t","taskId","find","console","log","name","userName","newUsers","v1","JuniorPlus","EditAbleSpan","editMode","setEdditMode","deactivateMode","autoFocus","onBlur","span","onDoubleClick","EditAbleSpanLC","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","x","y","newValue","defaultState","getItem","parse","restoreState","Select","hoverElement","setHoverElement","onKeyUp","event","i","options","onKey","tabIndex","selectTitle","optionWrapper","option","selected","label","handlerOnChange","onMouseEnter","RadioButton","radioButtonTitle","values","radioItem","radioInput","onChangeRadioButton","radioItemTitle","Junior","radioState","setRadioState","inputValue1","setInputValue1","inputValue2","setInputValue2","selectValue","setSelectValue","newInputValue","radioItemId","clickItem","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.27670535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flyMenu\":\"FlyMenu_flyMenu__2c7ma\",\"flyMenuList\":\"FlyMenu_flyMenuList__Kd8_H\",\"flyMenuLink\":\"FlyMenu_flyMenuLink__3mTTr\",\"flyMenuItem\":\"FlyMenu_flyMenuItem__2_zdy\",\"show\":\"FlyMenu_show__29x28\",\"activeLink\":\"FlyMenu_activeLink__23-CX\",\"outside\":\"FlyMenu_outside__1IhKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Message_bg__1JJW5\",\"avatar\":\"Message_avatar__2Oa-t\",\"block\":\"Message_block__27Dpb\",\"nickName\":\"Message_nickName__1FhgC\",\"text\":\"Message_text__OTqzH\",\"time\":\"Message_time__1vBAC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButtonTitle\":\"RadioButton_radioButtonTitle__1EUs6\",\"radioItem\":\"RadioButton_radioItem__1hrQg\",\"radioItemTitle\":\"RadioButton_radioItemTitle__2KqnM\",\"active\":\"RadioButton_active__1VxzH\",\"radioInput\":\"RadioButton_radioInput__2da1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectTitle\":\"Select_selectTitle__fKzfb\",\"optionWrapper\":\"Select_optionWrapper__2zDLi\",\"selected\":\"Select_selected__1ufc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Burger_wrapper__2_qbV\",\"item\":\"Burger_item__3NsEl\",\"active\":\"Burger_active__sbMF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3ioML\",\"error\":\"Button_error__1-CXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputCheckbox_input__2dAhW\",\"checkbox\":\"InputCheckbox_checkbox__BEE4i\",\"active\":\"InputCheckbox_active__1cbDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditAbleSpan_input__3JgIG\",\"span\":\"EditAbleSpan_span__2HzXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"EditAbleSpan_input__e5vkl\",\"span\":\"EditAbleSpan_span__3IIQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"InputText_inputText__1skyF\",\"error\":\"InputText_error__29s8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ShowRoom_wrapper__AwnXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PreJunior_title__2bdAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JuniorPlus_wrapper__3GSX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Junior_wrapper__2wFQY\"};","import React, {useState} from \"react\";\nimport s from \"./Burger.module.scss\"\n\ntype PropsType = {\n    active:boolean\n    onClick: () => void\n}\n\nexport function Burger(props:PropsType) {\n\n    return (\n        <div className={s.wrapper} onClick={props.onClick}>\n            <span className={`${s.item} ${props.active ? s.active : \"\"} `} > </span>\n        </div>\n    );\n}","import React from \"react\";\nimport s from \"./FlyMenu.module.scss\";\nimport {NavLink} from \"react-router-dom\";\n\ntype PropsType = {\n    status: boolean\n    onClickHide: ()=> void\n}\n\nexport function FlyMenu(props: PropsType) {\n    return (\n        <div className={s.wrapper} >\n            <div className={`${s.outside} ${props.status ? s.show : \"\"}`} onClick={props.onClickHide}></div>\n            <div className={`${s.flyMenu} ${props.status ? s.show : \"\"}`}>\n                <ul className={s.flyMenuList}>\n                    <NavLink className={s.flyMenuLink} to=\"prejunior\" activeClassName={s.activeLink}>\n                        <li className={s.flyMenuItem}> PreJunior</li>\n                    </NavLink>\n\n                    <NavLink className={s.flyMenuLink} to=\"junior\" activeClassName={s.activeLink}>\n                        <li className={s.flyMenuItem}> Junior</li>\n                    </NavLink>\n                    <NavLink className={s.flyMenuLink} to=\"juniorplus\" activeClassName={s.activeLink}>\n                        <li className={s.flyMenuItem}> Junior+</li>\n                    </NavLink>\n                </ul>\n            </div>\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport {Burger} from \"./Burger/Burger\";\nimport {FlyMenu} from \"./FlyMenu/FlyMenu\";\n\n\nexport function NavBar() {\n\n    let [active, setActive] = useState(false);\n\n    function onClickChangeState() {\n        setActive(!active);\n    }\n\n    return (\n        <>\n            <Burger active={active} onClick={onClickChangeState}/>\n            <FlyMenu status={active} onClickHide={onClickChangeState}/>\n        </>\n    );\n}","import React, {useState} from \"react\";\nimport s from \"./Button.module.scss\"\n\ntype ButtonTypeProps = {\n    value:string\n    action: ()=> void\n    mode?: \"red\"\n}\n\nexport const Button = (props:ButtonTypeProps) =>{\n\n    return(\n        <button\n            className={props.mode === \"red\" ? `${s.btn}  ${s.error}`:  s.btn}\n            onClick={props.action}>\n            {props.value}\n        </button>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport s from \"./InputCheckbox.module.scss\"\n\ntype inputCheckboxTypeProps = {\n    checked: boolean\n    changeStatus: (status: boolean, id: number) => void\n    value: string;\n    id?:number}\n\nexport const InputCheckBox = (props:inputCheckboxTypeProps) => {\n\n    const changeStatus = (e:ChangeEvent<HTMLInputElement>) => {\n        let id = props.id || +e.currentTarget.id;\n       props.changeStatus(e.currentTarget.checked,id);\n    }\n    return (\n        <>\n            <label className={`${s.checkbox} ${props.checked? s.active: \"\"}`}>\n                <input className={s.input} type=\"checkbox\" value={\"1\"} checked={props.checked} onChange={changeStatus}/>\n                <span >{props.value}</span>\n            </label>\n        </>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport {Button} from \"../../common/Button/Button\";\nimport {InputCheckBox} from \"../../common/InputCheckbox/InputCheckbox\";\nimport {TasksType} from \"../../Pages/Prejunior/PreJunior\";\n\n\ntype TodolistPropsType = {\n    title: string\n    tasks: Array<TasksType>\n    removeTask: (taskId: number) => void\n    changeFilter: (value: \"All\" | \"High\" | \"Middle\" | \"Low\") => void\n    changeStatus: (status: boolean, id: number) => void\n\n}\n\nexport function Todolist(props: TodolistPropsType) {\n\n    const changeFilterValueAll = () => { props.changeFilter(\"All\")};\n    const changeFilterValueHigh = () => { props.changeFilter(\"High\")};\n    const changeFilterValueMiddle = () => { props.changeFilter(\"Middle\")};\n    const changeFilterValueLow = () => { props.changeFilter(\"Low\")};\n    return (\n        <div className={\"wrapper\"}>\n            <h3>{props.title}</h3>\n            <ul>\n                {props.tasks.map(task => {\n                    return (\n                        <li key={task.id}>\n                            <InputCheckBox value={task.titleTask}\n                                           checked={task.isDone}\n                                           changeStatus={props.changeStatus}\n                                           id={task.id}/>\n                            <Button value={\"x\"} action={() => {\n                                props.removeTask(task.id)\n                            }}/>\n                        </li>\n                    );\n                })}\n\n            </ul>\n            <div>\n                <Button value={\"All\"} action={ changeFilterValueAll}/>\n                <Button value={\"High\"} action={ changeFilterValueHigh}/>\n                <Button value={\"Middle\"} action={ changeFilterValueMiddle}/>\n                <Button value={\"Low\"} action={ changeFilterValueLow}/>\n            </div>\n\n        </div>\n    );\n\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport s from \"./InputText.module.scss\"\n\ntype InputTextTypeProps = {\n    value: string\n    onChange: (inputValue: string) => void\n    actionEnter: () => void;\n    error?: boolean\n}\n\n\nexport const InputText = (props: InputTextTypeProps) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        let inputValue = e.currentTarget.value;\n        props.onChange(inputValue);\n    }\n\n    const actionEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            props.actionEnter();\n        }\n\n    }\n    return (\n        <>\n            <input className={`${s.inputText} ${props.error && props.value !==\"\" ? s.error : \"\"}`}\n                   type=\"text\"\n                   value={props.value}\n                   onChange={onChange}\n                   onKeyPress={actionEnter}\n\n            />\n            <span>{}</span>\n        </>\n    );\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {Button} from \"../../common/Button/Button\";\nimport {InputText} from \"../../common/InputText/InputText\";\nimport {HelloUsersType} from \"../../Pages/Prejunior/PreJunior\";\n\n\n\ntype InputNameProps = {\n    inputState: string\n    changeInputName: (name:string) => void;\n    quantityUsers: Array<HelloUsersType>\n    changeQuantity: (user:string)=> void\n}\n\nfunction HelloInput(props:InputNameProps) {\n\n\n    const onChange = (inputValue: string) => {\n        props.changeInputName(inputValue)\n    };\n\n\n function HelloUser() {\n      if(props.inputState !==\"\"){\n         alert(`Hello dear ${props.inputState}`);\n         props.changeQuantity(props.inputState.toString())\n\n     }\n\n    props.changeInputName(\"\")\n }\n\n function sendKeyPressEnter(e:KeyboardEvent<HTMLInputElement>) {\n    if(e.key === \"Enter\"){\n        HelloUser();\n    }\n }\n\n    return (\n        <>\n\n            <InputText value={props.inputState} onChange={onChange} actionEnter={ HelloUser}/>\n            <Button value={\"Hello\"} action={HelloUser}/>\n\n            <div>Quantity Users: <b>{props.quantityUsers.length}</b></div>\n\n        </>\n    );\n}\n\nexport default HelloInput;","import React, {ChangeEvent, useState} from \"react\";\nimport {InputText} from \"../../common/InputText/InputText\";\nimport {InputCheckBox} from \"../../common/InputCheckbox/InputCheckbox\";\nimport {Button} from \"../../common/Button/Button\";\nimport s from \"./ShowRoom.module.scss\"\n\n\nexport const SchowRoom = () => {\n    let [inputValue, setInputValue] = useState<string>(\"\");\n    let [isDone, setIsDone] = useState<boolean>(true)\n\n    const onChange = (inputValue: string) => {\n        setInputValue(inputValue)\n    };\n\n    const changeStatus = (status: boolean) => {\n        setIsDone(status)\n    }\n\n    const buttonAction = () => {\n        alert(\"Button work\");\n    }\n\n    const actionEnter = () => {\n        alert(\"Enter action\");\n        setInputValue(\"\");\n    }\n    return (\n        <div className={s.wrapper}>\n            <h3>1</h3>\n            <InputText value={inputValue} onChange={onChange} actionEnter={actionEnter} error={true}/>\n            <h3>2</h3>\n            <InputCheckBox checked={isDone} changeStatus={changeStatus} value={\"Name\"}/>\n            <h3>3</h3>\n            <Button value={\"Button\"} action={buttonAction} mode={\"red\"}/>\n        </div>\n    );\n}","import React from 'react';\nimport s from \"./Message.module.scss\"\n\ntype MessageType = {\n    nickName: string,\n    text: string,\n    avatar: string,\n    hours: number,\n    minutes: number\n}\n\nconst Message:React.FC<MessageType>= (props) => {\n    return(\n        <div className={s.bg}>\n            <img className={s.avatar} src={props.avatar} alt=\"avatar\"/>\n            <div className={s.block}>\n                <div className={s.wrapper}>\n                    <span className={s.nickName}>{props.nickName}</span>\n                    <span className={s.text}>{props.text}</span>\n                </div>\n                <div className={s.time}>{`${props.hours}:0${props.minutes}`}</div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Message","import React, {useState} from \"react\";\n\nimport {v1} from \"uuid\";\nimport {Todolist} from \"../../components/Todolist/TodoList\";\nimport HelloInput from \"../../components/HelloInput/HelloInput\";\nimport {SchowRoom} from \"../../components/ShowRoom/ShowRoom\";\nimport Message from \"../../components/Message/Message\";\nimport s from \"./PreJunior.module.scss\";\n\nexport type TasksType = {\n    id: number\n    titleTask: string\n    priority: string\n    isDone: boolean\n}\ntype FilterType = \"All\" | \"High\" | \"Middle\" | \"Low\";\n\nexport type HelloUsersType = {\n    id: string\n    name: string\n}\n\n\nexport function PreJunior() {\n\n\n    let [tasks, setTasks] = useState<Array<TasksType>>(\n        [\n            {id: 1, titleTask: \"Work\", priority: \"High\", isDone: true},\n            {id: 2, titleTask: \"Study\", priority: \"High\", isDone: true},\n            {id: 3, titleTask: \"Rest\", priority: \"Middle\", isDone: true},\n            {id: 4, titleTask: \"Movies\", priority: \"Low\", isDone: false},\n        ]\n    );\n    let [filter, setFilter] = useState<FilterType>(\"All\")\n\n    let [inputState, setInput] = useState(\"\");\n\n    let [usersHello, setUsersHello] = useState<Array<HelloUsersType>>([]);\n\n\n    function removeTask(taskId: number) {\n        tasks = tasks.filter((t: TasksType) => t.id !== taskId)\n        setTasks(tasks);\n    }\n\n    function changeFilter(value: \"All\" | \"High\" | \"Middle\" | \"Low\") {\n        setFilter(value)\n    }\n\n    function enterName(name: string) {\n        setInput(name);\n    }\n\n    function changeQuantityUsers(userName: string) {\n        let newUser: HelloUsersType = {id: v1(), name: userName};\n        let newUsers = [newUser, ...usersHello]\n        setUsersHello(newUsers)\n\n    }\n\n    const changeStatus = (status: boolean, id: number) => {\n        let task = tasks.find(t => t.id === id);\n        console.log(status, id)\n        if (task) {\n            task.isDone = status;\n            setTasks([...tasks]);\n        }\n    }\n\n\n    let tasksForTodolist = tasks;\n    if (filter === \"High\") {\n        tasksForTodolist = tasks.filter((t) => t.priority === \"High\");\n    }\n    if (filter === \"Middle\") {\n        tasksForTodolist = tasks.filter((t) => t.priority === \"Middle\");\n    }\n    if (filter === \"Low\") {\n        tasksForTodolist = tasks.filter((t) => t.priority === \"Low\");\n    }\n\n\n    return (\n\n        <>\n            <h2 className={s.title}>Home Task 1</h2>\n            <Message nickName={\"Artem\"}\n                     text={\"npm start нажимал?\"}\n                     avatar={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS4XSv8zvv1XvIvvz8PFg8hRwUTQJjbis-CJg&usqp=CAU\"}\n                     hours={20}\n                     minutes={0}\n            />\n            <h2>Home Task 2</h2>\n            <Todolist title={\"To-do list\"}\n                      tasks={tasksForTodolist}\n                      removeTask={removeTask}\n                      changeFilter={changeFilter}\n                      changeStatus={changeStatus}\n\n\n            />\n            <h2>Home Task 3</h2>\n            <HelloInput inputState={inputState}\n                        changeInputName={enterName}\n                        quantityUsers={usersHello}\n                        changeQuantity={changeQuantityUsers}\n\n            />\n            <h2>Home Task 4</h2>\n            <SchowRoom/>\n\n\n\n        </>\n    );\n\n}","import React from \"react\";\nimport s from \"./JuniorPlus.module.scss\"\n\nexport function JuniorPlus() {\n    return (\n        <div className={s.wrapper}>\n            <h1>Page junior+ in process</h1>\n            <img src=\"https://img.icons8.com/all/500/gears.png\" alt=\"s\"/>\n        </div>\n    );\n}","import React, {ChangeEvent,KeyboardEvent, useState} from \"react\";\nimport s from \"./EditAbleSpan.module.scss\"\n\ntype EditAbleSpanPropsType = {\n    value: string\n    onChange: (newInputValue: string) => void\n\n}\n\n\nexport function EditAbleSpan(props: EditAbleSpanPropsType) {\n    let [editMode, setEdditMode] = useState(false)\n\n    const activateMode = () => {\n        setEdditMode(true)\n    }\n    const deactivateMode = () => {\n        setEdditMode(false)\n    }\n\n    const onChangeInputValue = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onChange(e.currentTarget.value)\n    }\n    function changeTitleOnKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            deactivateMode();\n        }\n    }\n\n    return (\n        <div className={s.wrapper}>\n            {\n                editMode\n                    ?\n                    <input  className={s.input}\n                            value={props.value}\n                            autoFocus={true}\n                            onBlur ={deactivateMode}\n                            onChange={onChangeInputValue}\n                            onKeyPress={changeTitleOnKeyPressed}\n                    />\n                    : <span className={s.span} onDoubleClick={activateMode}>{props.value}</span>\n            }\n        </div>\n    );\n}","import React, {ChangeEvent,KeyboardEvent, useState} from \"react\";\nimport s from \"./EditAbleSpan.module.scss\"\nimport {Button} from \"../../common/Button/Button\";\n\ntype EditAbleSpanPropsType = {\n    value: string\n    onChange: (newInputValue: string) => void\n}\n\nexport function EditAbleSpanLC(props: EditAbleSpanPropsType) {\n    let [editMode, setEdditMode] = useState(false)\n\n    const activateMode = () => {\n        setEdditMode(true)\n    }\n    const deactivateMode = () => {\n        setEdditMode(false)\n    }\n\n    const onChangeInputValue = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onChange(e.currentTarget.value)\n    }\n    function changeTitleOnKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            deactivateMode();\n        }\n    }\n\n    function saveState<T>(key: string, state: T) {\n        const stateAsString = JSON.stringify(state);\n        localStorage.setItem(key, stateAsString)\n    }\n\n    function restoreState<T>(key: string, defaultState: T) {\n        const stateAsString = localStorage.getItem(key);\n        if (stateAsString !== null) defaultState = JSON.parse(stateAsString);\n        return defaultState;\n    }\n    type StateType = {\n        x: string\n        y: number\n    }\n    const valueFromLC = () =>{\n        let newValue = restoreState<StateType>(\"first\", {x:\"\",y:0});\n        console.log(newValue.x)\n        props.onChange(newValue.x)\n    }\n\n    return (\n        <div className={s.wrapper}>\n            {\n                editMode\n                    ?\n                    <input  className={s.input}\n                            value={props.value}\n                            autoFocus={true}\n                            onBlur ={deactivateMode}\n                            onChange={onChangeInputValue}\n                            onKeyPress={changeTitleOnKeyPressed}\n                    />\n                    : <span className={s.span} onDoubleClick={activateMode}>{props.value}</span>\n            }\n            <Button value={\"save\"} action={()=>{saveState(\"first\",{x:props.value,y:0})}}/>\n            <Button value={\"restore\"} action={valueFromLC}/>\n        </div>\n    );\n}","import React, {MouseEvent, KeyboardEvent, useState} from \"react\";\nimport s from \"./Select.module.scss\"\n\ntype SelectTypeProps = {\n    options: Array<string>\n    value: string\n    onChange: (option: string) => void\n}\n\n\nexport const Select = (props: SelectTypeProps) => {\n    let [active, setActive] = useState(false);\n\n    const onShowOption = () => {\n        setActive(!active)\n    }\n    const handlerOnChange = (event: MouseEvent<HTMLOptionElement>) => {\n        props.onChange(event.currentTarget.value)\n        setHoverElement(event.currentTarget.value);\n    }\n    let [hoverElement, setHoverElement] = useState(props.value);\n\n    const onKey = (event: KeyboardEvent<HTMLDivElement>) => {\n        for (let i = 0; i < props.options.length; i++) {\n            if (props.options[i] === hoverElement) {\n                if (event.key === \"ArrowDown\") {\n                    if (!props.options[i + 1]) break\n                    props.onChange(props.options[i + 1]);\n                    setHoverElement(props.options[i + 1])\n                } else if (event.key === \"ArrowUp\") {\n                    if (!props.options[i - 1]) break\n                    props.onChange(props.options[i - 1]);\n                    setHoverElement(props.options[i - 1])\n                }\n            }\n        }\n        if (event.key === \"Escape\") setActive(false);\n        if (event.key === \"Enter\") setActive(!active);\n    }\n\n    return (\n        <>\n\n            <div onKeyUp={(event) => onKey(event)} tabIndex={0} className={s.selectTitle}\n                 onClick={onShowOption}>{props.value}\n                {active ? <div className={s.optionWrapper}>\n                    {props.options.map(option => {\n\n                            return (\n\n                                <option className={`${s.option} ${hoverElement === option ? s.selected : \"\"}`}\n                                        key={option}\n                                        value={option}\n                                        label={option}\n                                        onClick={(event) => handlerOnChange(event)}\n                                        onMouseEnter={(e) => {\n                                            setHoverElement(e.currentTarget.value)\n                                        }}\n                                >{option}\n                                </option>)\n                        }\n                    )}\n                </div> : \"\"}\n            </div>\n\n\n        </>\n    );\n\n}","import React, {MouseEvent, useState} from \"react\";\nimport {InputSettingsType} from \"../../Pages/Junior/Junior\";\nimport s from \"./RadioButton.module.scss\"\n\n\ntype RadioButtonPropsType = {\n    values: Array<InputSettingsType>\n    name: string\n    onChange: (radioItemId: string, isDone: boolean) => void\n}\n\n\nexport const RadioButton = (props: RadioButtonPropsType) => {\n\n    return (\n        <>\n            <h3 className={s.radioButtonTitle}>{props.name}</h3>\n            {props.values.map(i => {\n                const onChangeRadioButton = (event: MouseEvent<HTMLInputElement>) => {\n                    props.onChange(event.currentTarget.id, event.currentTarget.checked);\n                }\n                return <>\n                    <label className={s.radioItem}>\n                        <input className={s.radioInput}\n                               type=\"radio\"\n                               value={i.title}\n                               onClick={(event) => onChangeRadioButton(event)}\n                               id={i.id}\n                               checked={i.isDone}\n                        />\n                        <span className={`${s.radioItemTitle} ${i.isDone? s.active:\"\"}`}>{i.title}</span>\n                    </label>\n                </>\n            })}\n        </>\n    );\n\n\n};","import React, {useState} from \"react\";\nimport s from \"./Junior.module.scss\"\nimport {EditAbleSpan} from \"../../components/EditAbleSpan/EditAbleSpan\";\nimport {EditAbleSpanLC} from \"../../components/EditAbleSpanLC/EditAbleSpan\";\nimport {Select} from \"../../common/Select/Select\";\nimport {RadioButton} from \"../../common/RadioButton/RadioButton\";\n\nexport type InputSettingsType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\nexport function Junior() {\n    let radioSettings: Array<InputSettingsType> = [\n        {id: \"1\", title: \"Beer\", isDone: false},\n        {id: \"2\", title: \"Milk\", isDone: false},\n        {id: \"3\", title: \"Jin\", isDone: false},\n        {id: \"4\", title: \"Tequila\", isDone: false},\n    ]\n\n    let [radioState, setRadioState] = useState(radioSettings);\n\n    let [inputValue1, setInputValue1] = useState<string>(\"Your name\");\n\n    let [inputValue2, setInputValue2] = useState<string>(\"Your name\");\n\n    let optionsValue = [\"Minsk\", \"Moscow\", \"London\", \"Bon\"];\n\n    let [selectValue, setSelectValue] = useState(\"Choice...\");\n\n    const onChangeInputValue1 = (newInputValue: string) => {\n        setInputValue1(newInputValue)\n    }\n\n    const onChangeInputValue2 = (newInputValue: string) => {\n        setInputValue2(newInputValue)\n    }\n\n\n\n\n    const onChangeSelectOption = (option: string) => {\n        setSelectValue(option);\n    }\n\n    const onChangeRadioInputStatus = (radioItemId: string, isDone: boolean) => {\n        console.log(radioItemId, isDone)\n        let clickItem = radioState.find(i => i.id === radioItemId);\n        if (clickItem) {\n            clickItem.isDone = !clickItem.isDone\n            setRadioState([...radioState]);\n        }\n\n    }\n\n\n    return (\n        <div className={s.wrapper}>\n\n            <h2>Home Task 6</h2>\n            <EditAbleSpan value={inputValue1} onChange={onChangeInputValue1}/>\n\n            <h4>Home Task 6 with *</h4>\n\n            <EditAbleSpanLC value={inputValue2} onChange={onChangeInputValue2}/>\n\n            <h2>Home Task7</h2>\n            <Select value={selectValue} options={optionsValue} onChange={onChangeSelectOption}/>\n\n            <RadioButton values={radioState} name={\"Drinks\"} onChange={onChangeRadioInputStatus}/>\n        </div>\n    );\n}","import './App.scss';\nimport React, {useEffect, useState} from \"react\";\n\nimport {HashRouter, Redirect, Route,} from \"react-router-dom\"\n\nimport {NavBar} from \"./components/NavBar/NavBar\";\nimport {PreJunior} from \"./Pages/Prejunior/PreJunior\";\nimport {JuniorPlus} from \"./Pages/JuniorPlus/JuniorPlus\";\nimport {Junior} from \"./Pages/Junior/Junior\";\n\n\nfunction App() {\n\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <NavBar/>\n                <Route exact path={'/'}  render={() => <PreJunior/>}/>\n                <Route path={'/prejunior'} render={() => <PreJunior/>}/>\n                <Route path={'/junior'} render={() => <Junior/>}/>\n                <Route path={'/juniorplus'} render={() => <JuniorPlus/>}/>\n            </div>\n        </HashRouter>\n\n    )\n        ;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}